begintemplate padex
	public pyr,pyradapex,x,y,z,c,sum
	public record_pyramidal,connect2target,apc,ap
	create pyr
	objref pyradapex,record_pyramidal,apc,ap
	proc init(){
		create pyr
		pyr{
			diam=2.4
			pyradapex=new PyramidalNeuron(0.5)
			record_pyramidal= new Vector()
			ap=new Vector()
			apc= new APCount(0.5)
			apc.thresh=-20
			x=y=z=0
			c=0
			sum=0
			celsius=26
		}
	}
obfunc connect2target() {localobj nc
	pyr nc=new NetCon(&pyradapex.vv,$o1)
	nc.threshold=10
	if(numarg()==2) {$o2=nc}
	return nc
}

endtemplate padex

objref cell1, pyramidal_list
pyramidal_list = new List()
cell1 = new padex()
pyramidal_list.append(cell1)
pyramidal_list.object(0).record_pyramidal.record(&pyramidal_list.object(0).pyradapex.vv)

objref rpc,nil,pctvec,pcidvec
pctvec= new Vector()
pcidvec= new Vector()

for k=0, pyramidal_list.count-1 {
pyramidal_list.object(k).record_pyramidal.record(&pyramidal_list.object(k).pyradapex.vv)
}
for c=0,pyramidal_list.count()-1{
rpc=pyramidal_list.object(c).connect2target(nil)
rpc.record(pctvec,pcidvec,c)
}

tstop = 1000
dt = 0.025
objref cvode
cvode = new CVode()
cvode.atol(0.001)
cvode.use_daspk(1)
cvode_active(1)

pyramidal_list.object(0).pyradapex.del=0
pyramidal_list.object(0).pyradapex.dur=1000
pyramidal_list.object(0).pyradapex.amp=0.32

objref g4, g5, g6, g7
newPlotV()
g4 = graphItem
g4.size(0, tstop, -100, 50)
g4.erase_all
g4.addvar("pyramidal_list.object(0).pyradapex.vv", 2, 2)

g4 = graphItem
g4.size(0, tstop, -100, 50)
g4.erase_all
g4.addvar("pyramidal_list.object(0).pyradapex.vv", 2, 2)

run()

print "Count : " , pctvec.size()